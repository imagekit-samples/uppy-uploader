{"id":"../node_modules/@uppy/utils/lib/getFileType.js","dependencies":[{"name":"/Users/manuchaudhary/uppy-uploader/package.json","includedInParent":true,"mtime":1595074329508},{"name":"/Users/manuchaudhary/uppy-uploader/node_modules/@uppy/utils/package.json","includedInParent":true,"mtime":1594920212982},{"name":"./getFileNameAndExtension","loc":{"line":1,"column":38},"parent":"/Users/manuchaudhary/uppy-uploader/node_modules/@uppy/utils/lib/getFileType.js","resolved":"/Users/manuchaudhary/uppy-uploader/node_modules/@uppy/utils/lib/getFileNameAndExtension.js"},{"name":"./mimeTypes","loc":{"line":3,"column":24},"parent":"/Users/manuchaudhary/uppy-uploader/node_modules/@uppy/utils/lib/getFileType.js","resolved":"/Users/manuchaudhary/uppy-uploader/node_modules/@uppy/utils/lib/mimeTypes.js"}],"generated":{"js":"var getFileNameAndExtension = require('./getFileNameAndExtension');\n\nvar mimeTypes = require('./mimeTypes');\n\nmodule.exports = function getFileType(file) {\n  var fileExtension = file.name ? getFileNameAndExtension(file.name).extension : null;\n  fileExtension = fileExtension ? fileExtension.toLowerCase() : null;\n\n  if (file.type) {\n    // if mime type is set in the file object already, use that\n    return file.type;\n  } else if (fileExtension && mimeTypes[fileExtension]) {\n    // else, see if we can map extension to a mime type\n    return mimeTypes[fileExtension];\n  } else {\n    // if all fails, fall back to a generic byte stream type\n    return 'application/octet-stream';\n  }\n};"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/@uppy/utils/lib/getFileType.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/@uppy/utils/lib/getFileType.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/@uppy/utils/lib/getFileType.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/@uppy/utils/lib/getFileType.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/@uppy/utils/lib/getFileType.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/@uppy/utils/lib/getFileType.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/@uppy/utils/lib/getFileType.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/@uppy/utils/lib/getFileType.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/@uppy/utils/lib/getFileType.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/@uppy/utils/lib/getFileType.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/@uppy/utils/lib/getFileType.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/@uppy/utils/lib/getFileType.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/@uppy/utils/lib/getFileType.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/@uppy/utils/lib/getFileType.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/@uppy/utils/lib/getFileType.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/@uppy/utils/lib/getFileType.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/@uppy/utils/lib/getFileType.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/@uppy/utils/lib/getFileType.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/@uppy/utils/lib/getFileType.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}}],"sources":{"../node_modules/@uppy/utils/lib/getFileType.js":"var getFileNameAndExtension = require('./getFileNameAndExtension');\n\nvar mimeTypes = require('./mimeTypes');\n\nmodule.exports = function getFileType(file) {\n  var fileExtension = file.name ? getFileNameAndExtension(file.name).extension : null;\n  fileExtension = fileExtension ? fileExtension.toLowerCase() : null;\n\n  if (file.type) {\n    // if mime type is set in the file object already, use that\n    return file.type;\n  } else if (fileExtension && mimeTypes[fileExtension]) {\n    // else, see if we can map extension to a mime type\n    return mimeTypes[fileExtension];\n  } else {\n    // if all fails, fall back to a generic byte stream type\n    return 'application/octet-stream';\n  }\n};"},"lineCount":19}},"error":null,"hash":"94c70e0a4c3e0a0d110bf47224559ed9","cacheData":{"env":{}}}