{"id":"IReq","dependencies":[{"name":"/Users/manuchaudhary/uppy-uploader/package.json","includedInParent":true,"mtime":1595074373392},{"name":"/Users/manuchaudhary/uppy-uploader/node_modules/@uppy/utils/package.json","includedInParent":true,"mtime":1594920212982},{"name":"./getFileNameAndExtension","loc":{"line":1,"column":38},"parent":"/Users/manuchaudhary/uppy-uploader/node_modules/@uppy/utils/lib/getFileType.js","resolved":"/Users/manuchaudhary/uppy-uploader/node_modules/@uppy/utils/lib/getFileNameAndExtension.js"},{"name":"./mimeTypes","loc":{"line":3,"column":24},"parent":"/Users/manuchaudhary/uppy-uploader/node_modules/@uppy/utils/lib/getFileType.js","resolved":"/Users/manuchaudhary/uppy-uploader/node_modules/@uppy/utils/lib/mimeTypes.js"}],"generated":{"js":"var e=require(\"./getFileNameAndExtension\"),n=require(\"./mimeTypes\");module.exports=function(t){var r=t.name?e(t.name).extension:null;return r=r?r.toLowerCase():null,t.type?t.type:r&&n[r]?n[r]:\"application/octet-stream\"};"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/@uppy/utils/lib/getFileType.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/@uppy/utils/lib/getFileType.js","original":{"line":1,"column":0},"generated":{"line":1,"column":4}},{"source":"../node_modules/@uppy/utils/lib/getFileType.js","original":{"line":1,"column":0},"generated":{"line":1,"column":6}},{"source":"../node_modules/@uppy/utils/lib/getFileType.js","original":{"line":1,"column":0},"generated":{"line":1,"column":14}},{"source":"../node_modules/@uppy/utils/lib/getFileType.js","original":{"line":3,"column":0},"generated":{"line":1,"column":43}},{"source":"../node_modules/@uppy/utils/lib/getFileType.js","original":{"line":3,"column":0},"generated":{"line":1,"column":45}},{"source":"../node_modules/@uppy/utils/lib/getFileType.js","original":{"line":3,"column":0},"generated":{"line":1,"column":53}},{"source":"../node_modules/@uppy/utils/lib/getFileType.js","original":{"line":5,"column":0},"generated":{"line":1,"column":68}},{"source":"../node_modules/@uppy/utils/lib/getFileType.js","original":{"line":5,"column":0},"generated":{"line":1,"column":75}},{"source":"../node_modules/@uppy/utils/lib/getFileType.js","original":{"line":5,"column":0},"generated":{"line":1,"column":83}},{"source":"../node_modules/@uppy/utils/lib/getFileType.js","original":{"line":5,"column":0},"generated":{"line":1,"column":92}},{"source":"../node_modules/@uppy/utils/lib/getFileType.js","original":{"line":6,"column":0},"generated":{"line":1,"column":95}},{"source":"../node_modules/@uppy/utils/lib/getFileType.js","original":{"line":6,"column":0},"generated":{"line":1,"column":99}},{"source":"../node_modules/@uppy/utils/lib/getFileType.js","original":{"line":6,"column":0},"generated":{"line":1,"column":101}},{"source":"../node_modules/@uppy/utils/lib/getFileType.js","original":{"line":6,"column":0},"generated":{"line":1,"column":103}},{"source":"../node_modules/@uppy/utils/lib/getFileType.js","original":{"line":6,"column":0},"generated":{"line":1,"column":108}},{"source":"../node_modules/@uppy/utils/lib/getFileType.js","original":{"line":6,"column":0},"generated":{"line":1,"column":110}},{"source":"../node_modules/@uppy/utils/lib/getFileType.js","original":{"line":6,"column":0},"generated":{"line":1,"column":112}},{"source":"../node_modules/@uppy/utils/lib/getFileType.js","original":{"line":6,"column":0},"generated":{"line":1,"column":118}},{"source":"../node_modules/@uppy/utils/lib/getFileType.js","original":{"line":6,"column":0},"generated":{"line":1,"column":128}},{"source":"../node_modules/@uppy/utils/lib/getFileType.js","original":{"line":9,"column":0},"generated":{"line":1,"column":133}},{"source":"../node_modules/@uppy/utils/lib/getFileType.js","original":{"line":7,"column":0},"generated":{"line":1,"column":140}},{"source":"../node_modules/@uppy/utils/lib/getFileType.js","original":{"line":7,"column":0},"generated":{"line":1,"column":142}},{"source":"../node_modules/@uppy/utils/lib/getFileType.js","original":{"line":7,"column":0},"generated":{"line":1,"column":144}},{"source":"../node_modules/@uppy/utils/lib/getFileType.js","original":{"line":7,"column":0},"generated":{"line":1,"column":146}},{"source":"../node_modules/@uppy/utils/lib/getFileType.js","original":{"line":7,"column":0},"generated":{"line":1,"column":160}},{"source":"../node_modules/@uppy/utils/lib/getFileType.js","original":{"line":9,"column":0},"generated":{"line":1,"column":165}},{"source":"../node_modules/@uppy/utils/lib/getFileType.js","original":{"line":9,"column":0},"generated":{"line":1,"column":167}},{"source":"../node_modules/@uppy/utils/lib/getFileType.js","original":{"line":11,"column":0},"generated":{"line":1,"column":172}},{"source":"../node_modules/@uppy/utils/lib/getFileType.js","original":{"line":11,"column":0},"generated":{"line":1,"column":174}},{"source":"../node_modules/@uppy/utils/lib/getFileType.js","original":{"line":12,"column":0},"generated":{"line":1,"column":179}},{"source":"../node_modules/@uppy/utils/lib/getFileType.js","original":{"line":12,"column":0},"generated":{"line":1,"column":182}},{"source":"../node_modules/@uppy/utils/lib/getFileType.js","original":{"line":12,"column":0},"generated":{"line":1,"column":184}},{"source":"../node_modules/@uppy/utils/lib/getFileType.js","original":{"line":14,"column":0},"generated":{"line":1,"column":187}},{"source":"../node_modules/@uppy/utils/lib/getFileType.js","original":{"line":14,"column":0},"generated":{"line":1,"column":189}},{"source":"../node_modules/@uppy/utils/lib/getFileType.js","original":{"line":17,"column":0},"generated":{"line":1,"column":192}}],"sources":{"../node_modules/@uppy/utils/lib/getFileType.js":"var getFileNameAndExtension = require('./getFileNameAndExtension');\n\nvar mimeTypes = require('./mimeTypes');\n\nmodule.exports = function getFileType(file) {\n  var fileExtension = file.name ? getFileNameAndExtension(file.name).extension : null;\n  fileExtension = fileExtension ? fileExtension.toLowerCase() : null;\n\n  if (file.type) {\n    // if mime type is set in the file object already, use that\n    return file.type;\n  } else if (fileExtension && mimeTypes[fileExtension]) {\n    // else, see if we can map extension to a mime type\n    return mimeTypes[fileExtension];\n  } else {\n    // if all fails, fall back to a generic byte stream type\n    return 'application/octet-stream';\n  }\n};"},"lineCount":null}},"error":null,"hash":"1868938fc2158a8150b7fba3620b33fb","cacheData":{"env":{}}}